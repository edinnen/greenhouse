// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v5.27.1
// source: coop.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CoopState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Lights                  bool        `protobuf:"varint,1,opt,name=lights,proto3" json:"lights,omitempty"`
	Brightness              float32     `protobuf:"fixed32,2,opt,name=brightness,proto3" json:"brightness,omitempty"`
	Red                     uint32      `protobuf:"varint,3,opt,name=red,proto3" json:"red,omitempty"`
	Green                   uint32      `protobuf:"varint,4,opt,name=green,proto3" json:"green,omitempty"`
	Blue                    uint32      `protobuf:"varint,5,opt,name=blue,proto3" json:"blue,omitempty"`
	White                   uint32      `protobuf:"varint,6,opt,name=white,proto3" json:"white,omitempty"`
	LightsLast              uint32      `protobuf:"varint,7,opt,name=lightsLast,proto3" json:"lightsLast,omitempty"`
	Temperature             float32     `protobuf:"fixed32,8,opt,name=temperature,proto3" json:"temperature,omitempty"`
	Humidity                float32     `protobuf:"fixed32,9,opt,name=humidity,proto3" json:"humidity,omitempty"`
	GatePosition            float32     `protobuf:"fixed32,10,opt,name=gatePosition,proto3" json:"gatePosition,omitempty"`
	Timestamp               int64       `protobuf:"varint,11,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	WateredToday            bool        `protobuf:"varint,12,opt,name=wateredToday,proto3" json:"wateredToday,omitempty"`
	LightsTiming            *CoopTiming `protobuf:"bytes,13,opt,name=lightsTiming,proto3" json:"lightsTiming,omitempty"`
	RecirculationFan        bool        `protobuf:"varint,14,opt,name=recirculationFan,proto3" json:"recirculationFan,omitempty"`
	RecirculationFanLast    uint32      `protobuf:"varint,15,opt,name=recirculationFanLast,proto3" json:"recirculationFanLast,omitempty"`
	VentFan                 bool        `protobuf:"varint,16,opt,name=ventFan,proto3" json:"ventFan,omitempty"`
	VentFanLast             uint32      `protobuf:"varint,17,opt,name=ventFanLast,proto3" json:"ventFanLast,omitempty"`
	VentOverridden          bool        `protobuf:"varint,18,opt,name=ventOverridden,proto3" json:"ventOverridden,omitempty"`
	WateredLast             uint32      `protobuf:"varint,19,opt,name=wateredLast,proto3" json:"wateredLast,omitempty"`
	LightsOverridden        bool        `protobuf:"varint,20,opt,name=lightsOverridden,proto3" json:"lightsOverridden,omitempty"`
	RampPercentage          float32     `protobuf:"fixed32,21,opt,name=rampPercentage,proto3" json:"rampPercentage,omitempty"`
	MaxAutomationBrightness float32     `protobuf:"fixed32,22,opt,name=maxAutomationBrightness,proto3" json:"maxAutomationBrightness,omitempty"`
	DeviceID                int32       `protobuf:"varint,23,opt,name=deviceID,proto3" json:"deviceID,omitempty"`
}

func (x *CoopState) Reset() {
	*x = CoopState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_coop_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CoopState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CoopState) ProtoMessage() {}

func (x *CoopState) ProtoReflect() protoreflect.Message {
	mi := &file_coop_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CoopState.ProtoReflect.Descriptor instead.
func (*CoopState) Descriptor() ([]byte, []int) {
	return file_coop_proto_rawDescGZIP(), []int{0}
}

func (x *CoopState) GetLights() bool {
	if x != nil {
		return x.Lights
	}
	return false
}

func (x *CoopState) GetBrightness() float32 {
	if x != nil {
		return x.Brightness
	}
	return 0
}

func (x *CoopState) GetRed() uint32 {
	if x != nil {
		return x.Red
	}
	return 0
}

func (x *CoopState) GetGreen() uint32 {
	if x != nil {
		return x.Green
	}
	return 0
}

func (x *CoopState) GetBlue() uint32 {
	if x != nil {
		return x.Blue
	}
	return 0
}

func (x *CoopState) GetWhite() uint32 {
	if x != nil {
		return x.White
	}
	return 0
}

func (x *CoopState) GetLightsLast() uint32 {
	if x != nil {
		return x.LightsLast
	}
	return 0
}

func (x *CoopState) GetTemperature() float32 {
	if x != nil {
		return x.Temperature
	}
	return 0
}

func (x *CoopState) GetHumidity() float32 {
	if x != nil {
		return x.Humidity
	}
	return 0
}

func (x *CoopState) GetGatePosition() float32 {
	if x != nil {
		return x.GatePosition
	}
	return 0
}

func (x *CoopState) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *CoopState) GetWateredToday() bool {
	if x != nil {
		return x.WateredToday
	}
	return false
}

func (x *CoopState) GetLightsTiming() *CoopTiming {
	if x != nil {
		return x.LightsTiming
	}
	return nil
}

func (x *CoopState) GetRecirculationFan() bool {
	if x != nil {
		return x.RecirculationFan
	}
	return false
}

func (x *CoopState) GetRecirculationFanLast() uint32 {
	if x != nil {
		return x.RecirculationFanLast
	}
	return 0
}

func (x *CoopState) GetVentFan() bool {
	if x != nil {
		return x.VentFan
	}
	return false
}

func (x *CoopState) GetVentFanLast() uint32 {
	if x != nil {
		return x.VentFanLast
	}
	return 0
}

func (x *CoopState) GetVentOverridden() bool {
	if x != nil {
		return x.VentOverridden
	}
	return false
}

func (x *CoopState) GetWateredLast() uint32 {
	if x != nil {
		return x.WateredLast
	}
	return 0
}

func (x *CoopState) GetLightsOverridden() bool {
	if x != nil {
		return x.LightsOverridden
	}
	return false
}

func (x *CoopState) GetRampPercentage() float32 {
	if x != nil {
		return x.RampPercentage
	}
	return 0
}

func (x *CoopState) GetMaxAutomationBrightness() float32 {
	if x != nil {
		return x.MaxAutomationBrightness
	}
	return 0
}

func (x *CoopState) GetDeviceID() int32 {
	if x != nil {
		return x.DeviceID
	}
	return 0
}

type CoopTiming struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Start *CoopTimestamp `protobuf:"bytes,1,opt,name=start,proto3" json:"start,omitempty"`
	End   *CoopTimestamp `protobuf:"bytes,2,opt,name=end,proto3" json:"end,omitempty"`
}

func (x *CoopTiming) Reset() {
	*x = CoopTiming{}
	if protoimpl.UnsafeEnabled {
		mi := &file_coop_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CoopTiming) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CoopTiming) ProtoMessage() {}

func (x *CoopTiming) ProtoReflect() protoreflect.Message {
	mi := &file_coop_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CoopTiming.ProtoReflect.Descriptor instead.
func (*CoopTiming) Descriptor() ([]byte, []int) {
	return file_coop_proto_rawDescGZIP(), []int{1}
}

func (x *CoopTiming) GetStart() *CoopTimestamp {
	if x != nil {
		return x.Start
	}
	return nil
}

func (x *CoopTiming) GetEnd() *CoopTimestamp {
	if x != nil {
		return x.End
	}
	return nil
}

type CoopTimestamp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Represents seconds of number of seconds since the beginning of the current day
	Seconds int64 `protobuf:"varint,1,opt,name=seconds,proto3" json:"seconds,omitempty"`
	// Non-negative fractions of a second at nanosecond resolution. Negative
	// second values with fractions must still have non-negative nanos values
	// that count forward in time. Must be from 0 to 999,999,999
	// inclusive.
	Nanos int32 `protobuf:"varint,2,opt,name=nanos,proto3" json:"nanos,omitempty"`
}

func (x *CoopTimestamp) Reset() {
	*x = CoopTimestamp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_coop_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CoopTimestamp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CoopTimestamp) ProtoMessage() {}

func (x *CoopTimestamp) ProtoReflect() protoreflect.Message {
	mi := &file_coop_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CoopTimestamp.ProtoReflect.Descriptor instead.
func (*CoopTimestamp) Descriptor() ([]byte, []int) {
	return file_coop_proto_rawDescGZIP(), []int{2}
}

func (x *CoopTimestamp) GetSeconds() int64 {
	if x != nil {
		return x.Seconds
	}
	return 0
}

func (x *CoopTimestamp) GetNanos() int32 {
	if x != nil {
		return x.Nanos
	}
	return 0
}

type CoopTimeseries struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	States []*CoopState `protobuf:"bytes,1,rep,name=states,proto3" json:"states,omitempty"`
}

func (x *CoopTimeseries) Reset() {
	*x = CoopTimeseries{}
	if protoimpl.UnsafeEnabled {
		mi := &file_coop_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CoopTimeseries) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CoopTimeseries) ProtoMessage() {}

func (x *CoopTimeseries) ProtoReflect() protoreflect.Message {
	mi := &file_coop_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CoopTimeseries.ProtoReflect.Descriptor instead.
func (*CoopTimeseries) Descriptor() ([]byte, []int) {
	return file_coop_proto_rawDescGZIP(), []int{3}
}

func (x *CoopTimeseries) GetStates() []*CoopState {
	if x != nil {
		return x.States
	}
	return nil
}

type CoopTimeseriesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	From     int64 `protobuf:"varint,1,opt,name=from,proto3" json:"from,omitempty"`
	To       int64 `protobuf:"varint,2,opt,name=to,proto3" json:"to,omitempty"`
	DeviceID int32 `protobuf:"varint,3,opt,name=deviceID,proto3" json:"deviceID,omitempty"`
}

func (x *CoopTimeseriesRequest) Reset() {
	*x = CoopTimeseriesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_coop_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CoopTimeseriesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CoopTimeseriesRequest) ProtoMessage() {}

func (x *CoopTimeseriesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_coop_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CoopTimeseriesRequest.ProtoReflect.Descriptor instead.
func (*CoopTimeseriesRequest) Descriptor() ([]byte, []int) {
	return file_coop_proto_rawDescGZIP(), []int{4}
}

func (x *CoopTimeseriesRequest) GetFrom() int64 {
	if x != nil {
		return x.From
	}
	return 0
}

func (x *CoopTimeseriesRequest) GetTo() int64 {
	if x != nil {
		return x.To
	}
	return 0
}

func (x *CoopTimeseriesRequest) GetDeviceID() int32 {
	if x != nil {
		return x.DeviceID
	}
	return 0
}

type CoopWaterRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceID int32 `protobuf:"varint,2,opt,name=deviceID,proto3" json:"deviceID,omitempty"`
}

func (x *CoopWaterRequest) Reset() {
	*x = CoopWaterRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_coop_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CoopWaterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CoopWaterRequest) ProtoMessage() {}

func (x *CoopWaterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_coop_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CoopWaterRequest.ProtoReflect.Descriptor instead.
func (*CoopWaterRequest) Descriptor() ([]byte, []int) {
	return file_coop_proto_rawDescGZIP(), []int{5}
}

func (x *CoopWaterRequest) GetDeviceID() int32 {
	if x != nil {
		return x.DeviceID
	}
	return 0
}

var File_coop_proto protoreflect.FileDescriptor

var file_coop_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x63, 0x6f, 0x6f, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x9a, 0x06, 0x0a,
	0x09, 0x43, 0x6f, 0x6f, 0x70, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x69,
	0x67, 0x68, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x6c, 0x69, 0x67, 0x68,
	0x74, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x62, 0x72, 0x69, 0x67, 0x68, 0x74, 0x6e, 0x65, 0x73, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0a, 0x62, 0x72, 0x69, 0x67, 0x68, 0x74, 0x6e, 0x65,
	0x73, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x03, 0x72, 0x65, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x67, 0x72, 0x65, 0x65, 0x6e, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x05, 0x67, 0x72, 0x65, 0x65, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x6c,
	0x75, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x62, 0x6c, 0x75, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x77, 0x68, 0x69, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x77,
	0x68, 0x69, 0x74, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x73, 0x4c, 0x61,
	0x73, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x73,
	0x4c, 0x61, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0b, 0x74, 0x65, 0x6d, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x75, 0x6d, 0x69, 0x64, 0x69,
	0x74, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x68, 0x75, 0x6d, 0x69, 0x64, 0x69,
	0x74, 0x79, 0x12, 0x22, 0x0a, 0x0c, 0x67, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0c, 0x67, 0x61, 0x74, 0x65, 0x50, 0x6f,
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x12, 0x22, 0x0a, 0x0c, 0x77, 0x61, 0x74, 0x65, 0x72, 0x65, 0x64, 0x54,
	0x6f, 0x64, 0x61, 0x79, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x77, 0x61, 0x74, 0x65,
	0x72, 0x65, 0x64, 0x54, 0x6f, 0x64, 0x61, 0x79, 0x12, 0x2f, 0x0a, 0x0c, 0x6c, 0x69, 0x67, 0x68,
	0x74, 0x73, 0x54, 0x69, 0x6d, 0x69, 0x6e, 0x67, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b,
	0x2e, 0x43, 0x6f, 0x6f, 0x70, 0x54, 0x69, 0x6d, 0x69, 0x6e, 0x67, 0x52, 0x0c, 0x6c, 0x69, 0x67,
	0x68, 0x74, 0x73, 0x54, 0x69, 0x6d, 0x69, 0x6e, 0x67, 0x12, 0x2a, 0x0a, 0x10, 0x72, 0x65, 0x63,
	0x69, 0x72, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x61, 0x6e, 0x18, 0x0e, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x10, 0x72, 0x65, 0x63, 0x69, 0x72, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x46, 0x61, 0x6e, 0x12, 0x32, 0x0a, 0x14, 0x72, 0x65, 0x63, 0x69, 0x72, 0x63, 0x75,
	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x61, 0x6e, 0x4c, 0x61, 0x73, 0x74, 0x18, 0x0f, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x14, 0x72, 0x65, 0x63, 0x69, 0x72, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x46, 0x61, 0x6e, 0x4c, 0x61, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x6e,
	0x74, 0x46, 0x61, 0x6e, 0x18, 0x10, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x76, 0x65, 0x6e, 0x74,
	0x46, 0x61, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x76, 0x65, 0x6e, 0x74, 0x46, 0x61, 0x6e, 0x4c, 0x61,
	0x73, 0x74, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x76, 0x65, 0x6e, 0x74, 0x46, 0x61,
	0x6e, 0x4c, 0x61, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x76, 0x65, 0x6e, 0x74, 0x4f, 0x76, 0x65,
	0x72, 0x72, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x18, 0x12, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x76,
	0x65, 0x6e, 0x74, 0x4f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x12, 0x20, 0x0a,
	0x0b, 0x77, 0x61, 0x74, 0x65, 0x72, 0x65, 0x64, 0x4c, 0x61, 0x73, 0x74, 0x18, 0x13, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0b, 0x77, 0x61, 0x74, 0x65, 0x72, 0x65, 0x64, 0x4c, 0x61, 0x73, 0x74, 0x12,
	0x2a, 0x0a, 0x10, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x73, 0x4f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64,
	0x64, 0x65, 0x6e, 0x18, 0x14, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x6c, 0x69, 0x67, 0x68, 0x74,
	0x73, 0x4f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x12, 0x26, 0x0a, 0x0e, 0x72,
	0x61, 0x6d, 0x70, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x18, 0x15, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x0e, 0x72, 0x61, 0x6d, 0x70, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74,
	0x61, 0x67, 0x65, 0x12, 0x38, 0x0a, 0x17, 0x6d, 0x61, 0x78, 0x41, 0x75, 0x74, 0x6f, 0x6d, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x42, 0x72, 0x69, 0x67, 0x68, 0x74, 0x6e, 0x65, 0x73, 0x73, 0x18, 0x16,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x17, 0x6d, 0x61, 0x78, 0x41, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x42, 0x72, 0x69, 0x67, 0x68, 0x74, 0x6e, 0x65, 0x73, 0x73, 0x12, 0x1a, 0x0a,
	0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x44, 0x18, 0x17, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x44, 0x22, 0x54, 0x0a, 0x0a, 0x43, 0x6f, 0x6f,
	0x70, 0x54, 0x69, 0x6d, 0x69, 0x6e, 0x67, 0x12, 0x24, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x43, 0x6f, 0x6f, 0x70, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x12, 0x20, 0x0a,
	0x03, 0x65, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x43, 0x6f, 0x6f,
	0x70, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x03, 0x65, 0x6e, 0x64, 0x22,
	0x3f, 0x0a, 0x0d, 0x43, 0x6f, 0x6f, 0x70, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x12, 0x18, 0x0a, 0x07, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x07, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x61,
	0x6e, 0x6f, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6e, 0x61, 0x6e, 0x6f, 0x73,
	0x22, 0x34, 0x0a, 0x0e, 0x43, 0x6f, 0x6f, 0x70, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x65, 0x72, 0x69,
	0x65, 0x73, 0x12, 0x22, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x43, 0x6f, 0x6f, 0x70, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x73, 0x22, 0x57, 0x0a, 0x15, 0x43, 0x6f, 0x6f, 0x70, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x65, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x66,
	0x72, 0x6f, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x74, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x44, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x44, 0x22,
	0x2e, 0x0a, 0x10, 0x43, 0x6f, 0x6f, 0x70, 0x57, 0x61, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x44, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x44, 0x32,
	0xd1, 0x01, 0x0a, 0x04, 0x43, 0x6f, 0x6f, 0x70, 0x12, 0x28, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x43,
	0x6f, 0x6f, 0x70, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x0a, 0x2e, 0x43, 0x6f, 0x6f, 0x70, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x1a, 0x0a, 0x2e, 0x43, 0x6f, 0x6f, 0x70, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x22, 0x00, 0x12, 0x28, 0x0a, 0x0c, 0x53, 0x65, 0x74, 0x43, 0x6f, 0x6f, 0x70, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x12, 0x0a, 0x2e, 0x43, 0x6f, 0x6f, 0x70, 0x53, 0x74, 0x61, 0x74, 0x65, 0x1a, 0x0a,
	0x2e, 0x43, 0x6f, 0x6f, 0x70, 0x53, 0x74, 0x61, 0x74, 0x65, 0x22, 0x00, 0x12, 0x35, 0x0a, 0x0b,
	0x43, 0x6f, 0x6f, 0x70, 0x57, 0x61, 0x74, 0x65, 0x72, 0x65, 0x64, 0x12, 0x11, 0x2e, 0x43, 0x6f,
	0x6f, 0x70, 0x57, 0x61, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x11,
	0x2e, 0x43, 0x6f, 0x6f, 0x70, 0x57, 0x61, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x22, 0x00, 0x12, 0x3e, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6f, 0x70, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x65, 0x72, 0x69, 0x65, 0x73, 0x12, 0x16, 0x2e, 0x43, 0x6f, 0x6f, 0x70, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x65, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x0f, 0x2e, 0x43, 0x6f, 0x6f, 0x70, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x65, 0x72, 0x69, 0x65,
	0x73, 0x22, 0x00, 0x42, 0x26, 0x5a, 0x24, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x65, 0x64, 0x69, 0x6e, 0x6e, 0x65, 0x6e, 0x2f, 0x67, 0x72, 0x65, 0x65, 0x6e, 0x48,
	0x6f, 0x75, 0x73, 0x65, 0x2f, 0x63, 0x6d, 0x64, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_coop_proto_rawDescOnce sync.Once
	file_coop_proto_rawDescData = file_coop_proto_rawDesc
)

func file_coop_proto_rawDescGZIP() []byte {
	file_coop_proto_rawDescOnce.Do(func() {
		file_coop_proto_rawDescData = protoimpl.X.CompressGZIP(file_coop_proto_rawDescData)
	})
	return file_coop_proto_rawDescData
}

var file_coop_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_coop_proto_goTypes = []interface{}{
	(*CoopState)(nil),             // 0: CoopState
	(*CoopTiming)(nil),            // 1: CoopTiming
	(*CoopTimestamp)(nil),         // 2: CoopTimestamp
	(*CoopTimeseries)(nil),        // 3: CoopTimeseries
	(*CoopTimeseriesRequest)(nil), // 4: CoopTimeseriesRequest
	(*CoopWaterRequest)(nil),      // 5: CoopWaterRequest
}
var file_coop_proto_depIdxs = []int32{
	1, // 0: CoopState.lightsTiming:type_name -> CoopTiming
	2, // 1: CoopTiming.start:type_name -> CoopTimestamp
	2, // 2: CoopTiming.end:type_name -> CoopTimestamp
	0, // 3: CoopTimeseries.states:type_name -> CoopState
	0, // 4: Coop.GetCoopState:input_type -> CoopState
	0, // 5: Coop.SetCoopState:input_type -> CoopState
	5, // 6: Coop.CoopWatered:input_type -> CoopWaterRequest
	4, // 7: Coop.GetCoopTimeseries:input_type -> CoopTimeseriesRequest
	0, // 8: Coop.GetCoopState:output_type -> CoopState
	0, // 9: Coop.SetCoopState:output_type -> CoopState
	5, // 10: Coop.CoopWatered:output_type -> CoopWaterRequest
	3, // 11: Coop.GetCoopTimeseries:output_type -> CoopTimeseries
	8, // [8:12] is the sub-list for method output_type
	4, // [4:8] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_coop_proto_init() }
func file_coop_proto_init() {
	if File_coop_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_coop_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CoopState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_coop_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CoopTiming); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_coop_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CoopTimestamp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_coop_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CoopTimeseries); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_coop_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CoopTimeseriesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_coop_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CoopWaterRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_coop_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_coop_proto_goTypes,
		DependencyIndexes: file_coop_proto_depIdxs,
		MessageInfos:      file_coop_proto_msgTypes,
	}.Build()
	File_coop_proto = out.File
	file_coop_proto_rawDesc = nil
	file_coop_proto_goTypes = nil
	file_coop_proto_depIdxs = nil
}
